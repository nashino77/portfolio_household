[{"/Users/taiki/Desktop/household/frontend/src/index.tsx":"1","/Users/taiki/Desktop/household/frontend/src/reportWebVitals.ts":"2","/Users/taiki/Desktop/household/frontend/src/App.tsx":"3","/Users/taiki/Desktop/household/frontend/src/urls/index.ts":"4","/Users/taiki/Desktop/household/frontend/src/api/auth.ts":"5","/Users/taiki/Desktop/household/frontend/src/components/Header/Header.tsx":"6","/Users/taiki/Desktop/household/frontend/src/components/Layout/Home.tsx":"7","/Users/taiki/Desktop/household/frontend/src/components/Auth/SignIn.tsx":"8","/Users/taiki/Desktop/household/frontend/src/components/Auth/SignUp.tsx":"9"},{"size":587,"mtime":1650775899284,"results":"10","hashOfConfig":"11"},{"size":425,"mtime":1650674375552,"results":"12","hashOfConfig":"11"},{"size":2613,"mtime":1650780762671,"results":"13","hashOfConfig":"11"},{"size":1237,"mtime":1650763405770,"results":"14","hashOfConfig":"11"},{"size":1238,"mtime":1650780905113,"results":"15","hashOfConfig":"11"},{"size":123,"mtime":1650776201780,"results":"16","hashOfConfig":"11"},{"size":528,"mtime":1650780139652,"results":"17","hashOfConfig":"11"},{"size":2257,"mtime":1650782217856,"results":"18","hashOfConfig":"11"},{"size":2785,"mtime":1650784142774,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ssuezc",{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/taiki/Desktop/household/frontend/src/index.tsx",[],[],"/Users/taiki/Desktop/household/frontend/src/reportWebVitals.ts",[],[],[],"/Users/taiki/Desktop/household/frontend/src/App.tsx",["52"],[],"import React, { useState, useEffect, createContext } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\n\n// component\nimport SignUp from './components/Auth/SignUp';\nimport SignIn from './components/Auth/SignIn';\nimport Home from './components/Layout/Home';\n\n// api\nimport { getCurrentUser } from './api/auth';\nimport { getTest } from './api/auth';\n\n// interface\nimport { User } from './interface';\nimport Header from './components/Header/Header';\n\nexport const AuthContext = createContext(\n  {} as {\n    loading: boolean,\n    setLoading: React.Dispatch<React.SetStateAction<boolean>>,\n    isSignedIn: boolean,\n    setIsSignedIn: React.Dispatch<React.SetStateAction<boolean>>,\n    currentUser: User | undefined,\n    setCurrentUser: React.Dispatch<React.SetStateAction<User | undefined>>,\n  }\n);\n\nconst App: React.FC = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [isSignedIn, setIsSignedIn] = useState<boolean>(false);\n  const [currentUser, setCurrentUser] = useState<User | undefined>();\n\n  // 認証済みユーザー情報の取得関数\n  const handleGetCurrentUser = async () => {\n    try {\n      const res = await getCurrentUser();\n      console.log(res);\n\n      if (res?.data.isLogin === true) {\n        setIsSignedIn(true);\n        setCurrentUser(res?.data.data);\n        // console.log(res?.data.data);\n      } else {\n        console.log(\"No current user\");\n      };\n    } catch (err : any) {\n      console.log(err);\n    }\n\n    setLoading(false);\n  };\n  \n  useEffect(() => {\n    handleGetCurrentUser();\n  }, [setCurrentUser]);\n\n  // ユーザー認証済みの判定で表示ページの変更\n  const Private = ({ children } : { children: React.ReactElement }) => {\n    if (!loading) {\n      if (isSignedIn) {\n        return children\n      } else {\n        return <Redirect to=\"/signin\" />\n      }\n    } else {\n      return <></>\n    };\n  };\n\n  // const handleGetTest = async () => {\n  //   const res = await getTest();\n  //   console.log(res.data);\n  // };\n\n  return (\n    <Router>\n      <AuthContext.Provider\n        value={{\n          loading,\n          setLoading,\n          isSignedIn,\n          setIsSignedIn,\n          currentUser,\n          setCurrentUser\n          }}\n        >\n        <Header />\n        <Switch>\n          <Route exact path=\"/signup\" component={SignUp} />\n          <Route exact path=\"/signin\" component={SignIn} />\n          <Private>\n            <Route exact path=\"/\" component={Home} />\n          </Private>\n        </Switch>\n      </AuthContext.Provider>\n    </Router>\n  );\n}\n\nexport default App;\n",[],"/Users/taiki/Desktop/household/frontend/src/urls/index.ts",[],[],"/Users/taiki/Desktop/household/frontend/src/api/auth.ts",[],[],"/Users/taiki/Desktop/household/frontend/src/components/Header/Header.tsx",[],[],"/Users/taiki/Desktop/household/frontend/src/components/Layout/Home.tsx",[],[],"/Users/taiki/Desktop/household/frontend/src/components/Auth/SignIn.tsx",["53"],[],"import React, { useState, useContext } from 'react';\nimport { useHistory, Link } from 'react-router-dom';\nimport Cookies from 'js-cookie';\nimport { AuthContext } from '../../App';\n\n// api\nimport { signIn } from '../../api/auth';\nimport { getTest } from '../../api/auth';\n\n// interface\nimport { SignInParams } from '../../interface';\n\nconst SignIn: React.FC = () => {\n  const history = useHistory();\n\n  const [email, setEmail] = useState<string>(\"\");\n  const [password, setPassword] = useState<string>(\"\");\n\n  const { setIsSignedIn, setCurrentUser } = useContext(AuthContext);\n\n  const handleSubmit = async (e: React.MouseEvent<HTMLButtonElement>) => {\n    e.preventDefault();\n\n    const params: SignInParams = {\n      email: email,\n      password: password,\n    };\n\n    try {\n      const res = await signIn(params);\n      console.log(res);\n\n      if (res.status === 200) {\n        Cookies.set(\"_access_token\", res.headers[\"access-token\"]);\n        Cookies.set(\"_client\", res.headers[\"client\"]);\n        Cookies.set(\"_uid\", res.headers[\"uid\"]);\n\n        setIsSignedIn(true);\n        setCurrentUser(res.data.data);\n\n        history.push(\"/\");\n\n        console.log(\"サインインしました\");\n      } else {\n        alert(\"サインインできませんでした\")\n      }\n    } catch (err: any) {\n      alert(\"サインインできませんでした\")\n    };\n  };\n\n  const handleGetTest = async () => {\n    try {\n      const res = await getTest();\n      console.log(res.data);\n    } catch (err: any) {\n      console.log(err);\n    }\n  };\n\n\n  return (\n    <>\n      <form>\n        <input \n          name=\"email\"\n          required\n          type=\"text\"\n          value={email}\n          onChange={e => setEmail(e.target.value)}\n        />\n        <input \n          name=\"password\"\n          required\n          type=\"text\"\n          value={password}\n          onChange={e => setPassword(e.target.value)}\n        />\n        <button\n          type=\"submit\"\n          disabled={\n            !email || !password\n            ? true\n            : false\n          }\n          onClick={handleSubmit}\n        >\n          送信\n        </button>\n      </form>\n      <Link to=\"/signup\">\n          未登録はこちら\n      </Link>\n    </>\n  )\n}\n\nexport default SignIn",[],"/Users/taiki/Desktop/household/frontend/src/components/Auth/SignUp.tsx",[],[],{"ruleId":"54","severity":1,"message":"55","line":11,"column":10,"nodeType":"56","messageId":"57","endLine":11,"endColumn":17},{"ruleId":"54","severity":1,"message":"58","line":52,"column":9,"nodeType":"56","messageId":"57","endLine":52,"endColumn":22},"@typescript-eslint/no-unused-vars","'getTest' is defined but never used.","Identifier","unusedVar","'handleGetTest' is assigned a value but never used."]