{"ast":null,"code":"var _jsxFileName = \"/Users/taiki/Desktop/household/frontend/src/components/Calendar/Calendar.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport format from 'date-fns/format';\nimport getDate from 'date-fns/getDate';\nimport getDay from 'date-fns/getDay';\nimport eachDayOfInterval from 'date-fns/eachDayOfInterval';\nimport endOfWeek from 'date-fns/endOfWeek';\nimport eachWeekOfInterval from 'date-fns/eachWeekOfInterval';\nimport addMonths from 'date-fns/addMonths';\nimport subMonths from 'date-fns/subMonths';\nimport startOfMonth from 'date-fns/startOfMonth';\nimport endOfMonth from 'date-fns/endOfMonth';\nimport style from './Calendar.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getCalendarArray = date => {\n  const sundays = eachWeekOfInterval({\n    start: startOfMonth(date),\n    end: endOfMonth(date)\n  });\n  return sundays.map(sunday => eachDayOfInterval({\n    start: sunday,\n    end: endOfWeek(sunday)\n  }));\n};\n\nconst Calendar = () => {\n  _s();\n\n  const [targetDate, setTargetDate] = useState(new Date());\n  const calendar = getCalendarArray(targetDate);\n  useEffect(() => {\n    if (currentUser) {\n      axios.get(householdIndex(currentUser.id), {\n        headers: {\n          \"access-token\": Cookies.get(\"_access_token\") || \"\",\n          \"client\": Cookies.get(\"_client\") || \"\",\n          \"uid\": Cookies.get(\"_uid\") || \"\"\n        }\n      }).then(res => {\n        console.log(res.data);\n        setCurrentHouseholds(res.data);\n      }).catch(e => {\n        console.log(e);\n      });\n    }\n\n    ;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '700px',\n      margin: '0 auto',\n      userSelect: 'none'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: \"Calendar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setTargetDate(current => subMonths(current, 1)),\n          children: \"\\u524D\\u306E\\u6708\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setTargetDate(new Date()),\n          children: \"\\u4ECA\\u6708\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setTargetDate(current => addMonths(current, 1)),\n          children: \"\\u6B21\\u306E\\u6708\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), format(targetDate, 'y年M月'), /*#__PURE__*/_jsxDEV(\"table\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u65E5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u6708\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u706B\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u6C34\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u6728\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u91D1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u571F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: calendar.map((weekRow, rowNum) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: weekRow.map(date => /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: getDay(date) === 0 ? style.day : '' || getDay(date) === 6 ? style.lastday : '',\n                children: getDate(date)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  width: '100px',\n                  height: '50px'\n                },\n                className: style.calendar,\n                children: getDate(date)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 25\n              }, this)]\n            }, getDay(date), true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 23\n            }, this))\n          }, rowNum, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Calendar, \"RpGvg3Xm/KoZ794xIsjbcp+5BNk=\");\n\n_c = Calendar;\nexport default Calendar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"sources":["/Users/taiki/Desktop/household/frontend/src/components/Calendar/Calendar.tsx"],"names":["React","useState","useEffect","axios","format","getDate","getDay","eachDayOfInterval","endOfWeek","eachWeekOfInterval","addMonths","subMonths","startOfMonth","endOfMonth","style","getCalendarArray","date","sundays","start","end","map","sunday","Calendar","targetDate","setTargetDate","Date","calendar","currentUser","get","householdIndex","id","headers","Cookies","then","res","console","log","data","setCurrentHouseholds","catch","e","width","margin","userSelect","textAlign","current","weekRow","rowNum","day","lastday","height"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAAiD,OAAjD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAIA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,iBAAP,MAA8B,4BAA9B;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,kBAAP,MAA+B,6BAA/B;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AAEA,OAAOC,KAAP,MAAkB,wBAAlB;;;AAEA,MAAMC,gBAAgB,GAAIC,IAAD,IAAgB;AACvC,QAAMC,OAAO,GAAGR,kBAAkB,CAAC;AACjCS,IAAAA,KAAK,EAAEN,YAAY,CAACI,IAAD,CADc;AAEjCG,IAAAA,GAAG,EAAEN,UAAU,CAACG,IAAD;AAFkB,GAAD,CAAlC;AAKA,SAAOC,OAAO,CAACG,GAAR,CAAaC,MAAD,IACjBd,iBAAiB,CAAC;AAAEW,IAAAA,KAAK,EAAEG,MAAT;AAAiBF,IAAAA,GAAG,EAAEX,SAAS,CAACa,MAAD;AAA/B,GAAD,CADZ,CAAP;AAGD,CATD;;AAYA,MAAMC,QAAkB,GAAG,MAAM;AAAA;;AAC/B,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BvB,QAAQ,CAAC,IAAIwB,IAAJ,EAAD,CAA5C;AACA,QAAMC,QAAQ,GAAGX,gBAAgB,CAACQ,UAAD,CAAjC;AAIArB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIyB,WAAJ,EAAiB;AACfxB,MAAAA,KAAK,CAACyB,GAAN,CAAUC,cAAc,CAACF,WAAW,CAACG,EAAb,CAAxB,EAAyC;AACvCC,QAAAA,OAAO,EAAE;AACP,0BAAgBC,OAAO,CAACJ,GAAR,CAAY,eAAZ,KAAgC,EADzC;AAEP,oBAAUI,OAAO,CAACJ,GAAR,CAAY,SAAZ,KAA0B,EAF7B;AAGP,iBAAOI,OAAO,CAACJ,GAAR,CAAY,MAAZ,KAAuB;AAHvB;AAD8B,OAAzC,EAOGK,IAPH,CAOSC,GAAD,IAAS;AACbC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;AACAC,QAAAA,oBAAoB,CAACJ,GAAG,CAACG,IAAL,CAApB;AACD,OAVH,EAWGE,KAXH,CAWUC,CAAD,IAAO;AACZL,QAAAA,OAAO,CAACC,GAAR,CAAYI,CAAZ;AACD,OAbH;AAcD;;AAAA;AACF,GAjBQ,EAiBN,EAjBM,CAAT;AAmBA,sBACE;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE,OAAT;AAAkBC,MAAAA,MAAM,EAAE,QAA1B;AAAoCC,MAAAA,UAAU,EAAE;AAAhD,KAAb;AAAA,4BACE;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,8BACE;AAAK,QAAA,KAAK,EAAE;AAAEA,UAAAA,SAAS,EAAE;AAAb,SAAZ;AAAA,gCACE;AAAQ,UAAA,OAAO,EAAE,MAAMpB,aAAa,CAACqB,OAAO,IAAIlC,SAAS,CAACkC,OAAD,EAAU,CAAV,CAArB,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,UAAA,OAAO,EAAE,MAAMrB,aAAa,CAAC,IAAIC,IAAJ,EAAD,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAQ,UAAA,OAAO,EAAE,MAAMD,aAAa,CAACqB,OAAO,IAAInC,SAAS,CAACmC,OAAD,EAAU,CAAV,CAArB,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAMGzC,MAAM,CAACmB,UAAD,EAAa,MAAb,CANT,eAOE;AAAO,QAAA,KAAK,EAAE;AAAEqB,UAAAA,SAAS,EAAE;AAAb,SAAd;AAAA,gCACE;AAAA,iCACE;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAYE;AAAA,oBAEIlB,QAAQ,CAACN,GAAT,CAAa,CAAC0B,OAAD,EAAUC,MAAV,kBACX;AAAA,sBAEID,OAAO,CAAC1B,GAAR,CAAaJ,IAAD,iBACV;AAAA,sCAIE;AACE,gBAAA,SAAS,EACPV,MAAM,CAACU,IAAD,CAAN,KAAiB,CAAjB,GAAqBF,KAAK,CAACkC,GAA3B,GAAiC,MACjC1C,MAAM,CAACU,IAAD,CAAN,KAAiB,CADgB,GACZF,KAAK,CAACmC,OADM,GACI,EAHzC;AAAA,0BAKG5C,OAAO,CAACW,IAAD;AALV;AAAA;AAAA;AAAA;AAAA,sBAJF,eAWE;AAAK,gBAAA,KAAK,EAAE;AAAEyB,kBAAAA,KAAK,EAAE,OAAT;AAAkBS,kBAAAA,MAAM,EAAE;AAA1B,iBAAZ;AAAgD,gBAAA,SAAS,EAAEpC,KAAK,CAACY,QAAjE;AAAA,0BACGrB,OAAO,CAACW,IAAD;AADV;AAAA;AAAA;AAAA;AAAA,sBAXF;AAAA,eACOV,MAAM,CAACU,IAAD,CADb;AAAA;AAAA;AAAA;AAAA,oBADF;AAFJ,aAAS+B,MAAT;AAAA;AAAA;AAAA;AAAA,kBADF;AAFJ;AAAA;AAAA;AAAA;AAAA,gBAZF;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqDD,CA9ED;;GAAMzB,Q;;KAAAA,Q;AAgFN,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect, useC } from 'react';\nimport axios from 'axios';\n\n\n\nimport format from 'date-fns/format';\nimport getDate from 'date-fns/getDate';\nimport getDay from 'date-fns/getDay';\nimport eachDayOfInterval from 'date-fns/eachDayOfInterval';\nimport endOfWeek from 'date-fns/endOfWeek';\nimport eachWeekOfInterval from 'date-fns/eachWeekOfInterval';\nimport addMonths from 'date-fns/addMonths';\nimport subMonths from 'date-fns/subMonths';\nimport startOfMonth from 'date-fns/startOfMonth';\nimport endOfMonth from 'date-fns/endOfMonth';\n\nimport style from './Calendar.module.scss';\n\nconst getCalendarArray = (date: Date) => {\n  const sundays = eachWeekOfInterval({\n    start: startOfMonth(date),\n    end: endOfMonth(date),\n  });\n\n  return sundays.map((sunday) => \n    eachDayOfInterval({ start: sunday, end: endOfWeek(sunday) })\n  );\n};\n\n\nconst Calendar: React.FC = () => {\n  const [targetDate, setTargetDate] = useState(new Date())\n  const calendar = getCalendarArray(targetDate);\n\n\n\n  useEffect(() => {\n    if (currentUser) {\n      axios.get(householdIndex(currentUser.id),{ \n        headers: {\n          \"access-token\": Cookies.get(\"_access_token\") || \"\",\n          \"client\": Cookies.get(\"_client\") || \"\",\n          \"uid\": Cookies.get(\"_uid\") || \"\",\n        },\n      })\n        .then((res) => {\n          console.log(res.data);\n          setCurrentHouseholds(res.data);\n        })\n        .catch((e) => {\n          console.log(e);\n        })\n    };\n  }, [])\n\n  return (\n    <div  style={{ width: '700px', margin: '0 auto', userSelect: 'none' }}>\n      <div style={{ textAlign: 'center' }}>Calendar</div>\n      <div>\n        <div style={{ textAlign: 'center' }}>\n          <button onClick={() => setTargetDate(current => subMonths(current, 1))}>前の月</button>\n          <button onClick={() => setTargetDate(new Date())}>今月</button>\n          <button onClick={() => setTargetDate(current => addMonths(current, 1))}>次の月</button>\n        </div>\n        {format(targetDate, 'y年M月')}\n        <table style={{ textAlign: 'center' }}>\n          <thead>\n            <tr>\n              <th>日</th>\n              <th>月</th>\n              <th>火</th>\n              <th>水</th>\n              <th>木</th>\n              <th>金</th>\n              <th>土</th>\n            </tr>\n          </thead>\n          <tbody>\n            {\n              calendar.map((weekRow, rowNum) => (\n                <tr key={rowNum}>\n                  {\n                    weekRow.map((date) => (\n                      <td \n                        key={getDay(date)} \n                        \n                      >\n                        <div \n                          className={\n                            getDay(date) === 0 ? style.day : '' || \n                            getDay(date) === 6 ? style.lastday : '' \n                        }>\n                          {getDate(date)}\n                        </div>\n                        <div style={{ width: '100px', height: '50px' }} className={style.calendar}>\n                          {getDate(date)}\n                        </div>\n                      </td>\n                    ))\n                  }\n                </tr>\n              ))\n            }\n          </tbody>\n        </table>\n      </div>\n    </div>\n  )\n}\n\nexport default Calendar"]},"metadata":{},"sourceType":"module"}