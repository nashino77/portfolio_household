{"ast":null,"code":"var _jsxFileName = \"/Users/taiki/Desktop/household/frontend/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, createContext } from 'react';\nimport { Redirect } from 'react-router-dom';\n// api\nimport { getCurrentUser } from './api/auth';\nimport { getTest } from './api/auth'; // interface\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext({});\n\nconst App = () => {\n  _s();\n\n  const [loading, setLoading] = useState(true);\n  const [isSignedIn, setIsSignedIn] = useState(false);\n  const [currentUser, setCurrentUser] = useState(); // 認証済みユーザー情報の取得関数\n\n  const handleGetCurrentUser = async () => {\n    try {\n      const res = await getCurrentUser();\n      console.log(res);\n\n      if ((res === null || res === void 0 ? void 0 : res.data.isLogin) === true) {\n        setIsSignedIn(true);\n        setCurrentUser(res === null || res === void 0 ? void 0 : res.data.data); // console.log(res?.data.data);\n      } else {\n        console.log(\"No current user\");\n      }\n\n      ;\n    } catch (err) {\n      console.log(err);\n    }\n\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    handleGetCurrentUser();\n  }, [setCurrentUser]); // ユーザー認証済みの判定で表示ページの変更\n\n  const Private = _ref => {\n    let {\n      children\n    } = _ref;\n\n    if (!loading) {\n      if (isSignedIn) {\n        return children;\n      } else {\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/signin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 16\n        }, this);\n      }\n    } else {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n    }\n\n    ;\n  };\n\n  const handleGetTest = async () => {\n    const res = await getTest();\n    console.log(res.data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"MRvxv/wPOvGiX4YVo79MnhJQeh0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/taiki/Desktop/household/frontend/src/App.tsx"],"names":["React","useState","useEffect","createContext","Redirect","getCurrentUser","getTest","AuthContext","App","loading","setLoading","isSignedIn","setIsSignedIn","currentUser","setCurrentUser","handleGetCurrentUser","res","console","log","data","isLogin","err","Private","children","handleGetTest"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,aAArC,QAA0D,OAA1D;AACA,SAAiDC,QAAjD,QAAiE,kBAAjE;AAMA;AACA,SAASC,cAAT,QAA+B,YAA/B;AACA,SAASC,OAAT,QAAwB,YAAxB,C,CAEA;;;;AAGA,OAAO,MAAMC,WAAW,gBAAGJ,aAAa,CACtC,EADsC,CAAjC;;AAWP,MAAMK,GAAa,GAAG,MAAM;AAAA;;AAC1B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAU,IAAV,CAAtC;AACA,QAAM,CAACU,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAU,KAAV,CAA5C;AACA,QAAM,CAACY,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,EAA9C,CAH0B,CAK1B;;AACA,QAAMc,oBAAoB,GAAG,YAAY;AACvC,QAAI;AACF,YAAMC,GAAG,GAAG,MAAMX,cAAc,EAAhC;AACAY,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;;AAEA,UAAI,CAAAA,GAAG,SAAH,IAAAA,GAAG,WAAH,YAAAA,GAAG,CAAEG,IAAL,CAAUC,OAAV,MAAsB,IAA1B,EAAgC;AAC9BR,QAAAA,aAAa,CAAC,IAAD,CAAb;AACAE,QAAAA,cAAc,CAACE,GAAD,aAACA,GAAD,uBAACA,GAAG,CAAEG,IAAL,CAAUA,IAAX,CAAd,CAF8B,CAG9B;AACD,OAJD,MAIO;AACLF,QAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACD;;AAAA;AACF,KAXD,CAWE,OAAOG,GAAP,EAAkB;AAClBJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AACD;;AAEDX,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAjBD;;AAmBAR,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,oBAAoB;AACrB,GAFQ,EAEN,CAACD,cAAD,CAFM,CAAT,CAzB0B,CA6B1B;;AACA,QAAMQ,OAAO,GAAG,QAAqD;AAAA,QAApD;AAAEC,MAAAA;AAAF,KAAoD;;AACnE,QAAI,CAACd,OAAL,EAAc;AACZ,UAAIE,UAAJ,EAAgB;AACd,eAAOY,QAAP;AACD,OAFD,MAEO;AACL,4BAAO,QAAC,QAAD;AAAU,UAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD;AACF,KAND,MAMO;AACL,0BAAO,qCAAP;AACD;;AAAA;AACF,GAVD;;AAYA,QAAMC,aAAa,GAAG,YAAY;AAChC,UAAMR,GAAG,GAAG,MAAMV,OAAO,EAAzB;AACAW,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;AACD,GAHD;;AAKA,sBACE;AAAA;AAAA;AAAA;AAAA,UADF;AAID,CAnDD;;GAAMX,G;;KAAAA,G;AAqDN,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect, createContext } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport axios from 'axios';\n\n// component\nimport Auth from './components/Auth/Auth';\n\n// api\nimport { getCurrentUser } from './api/auth';\nimport { getTest } from './api/auth';\n\n// interface\nimport { User } from './interface';\n\nexport const AuthContext = createContext(\n  {} as {\n    loading: boolean,\n    setLoading: React.Dispatch<React.SetStateAction<boolean>>,\n    isSignedIn: boolean,\n    setIsSignedIn: React.Dispatch<React.SetStateAction<boolean>>,\n    currentUser: User | undefined,\n    setCurrentUser: React.Dispatch<React.SetStateAction<User | undefined>>,\n  }\n);\n\nconst App: React.FC = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [isSignedIn, setIsSignedIn] = useState<boolean>(false);\n  const [currentUser, setCurrentUser] = useState<User | undefined>();\n\n  // 認証済みユーザー情報の取得関数\n  const handleGetCurrentUser = async () => {\n    try {\n      const res = await getCurrentUser();\n      console.log(res);\n\n      if (res?.data.isLogin === true) {\n        setIsSignedIn(true);\n        setCurrentUser(res?.data.data);\n        // console.log(res?.data.data);\n      } else {\n        console.log(\"No current user\");\n      };\n    } catch (err : any) {\n      console.log(err);\n    }\n\n    setLoading(false);\n  };\n  \n  useEffect(() => {\n    handleGetCurrentUser();\n  }, [setCurrentUser]);\n\n  // ユーザー認証済みの判定で表示ページの変更\n  const Private = ({ children } : { children: React.ReactElement }) => {\n    if (!loading) {\n      if (isSignedIn) {\n        return children\n      } else {\n        return <Redirect to=\"/signin\" />\n      }\n    } else {\n      return <></>\n    };\n  };\n\n  const handleGetTest = async () => {\n    const res = await getTest();\n    console.log(res.data);\n  };\n\n  return (\n    <div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}