{"ast":null,"code":"var _jsxFileName = \"/Users/taiki/Desktop/household/frontend/src/components/Calendar/Calendar.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport format from 'date-fns/format';\nimport getDate from 'date-fns/getDate';\nimport getDay from 'date-fns/getDay';\nimport eachDayOfInterval from 'date-fns/eachDayOfInterval';\nimport endOfWeek from 'date-fns/endOfWeek';\nimport eachWeekOfInterval from 'date-fns/eachWeekOfInterval';\nimport subMonths from 'date-fns/subMonths';\nimport startOfMonth from 'date-fns/startOfMonth';\nimport endOfMonth from 'date-fns/endOfMonth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst getCalendarArray = date => {\n  const sundays = eachWeekOfInterval({\n    start: startOfMonth(date),\n    end: endOfMonth(date)\n  });\n  return sundays.map(sunday => eachDayOfInterval({\n    start: sunday,\n    end: endOfWeek(sunday)\n  }));\n};\n\nconst Calendar = () => {\n  _s();\n\n  const [targetDate, setTargetDate] = useState(new Date());\n  const calendar = getCalendarArray(targetDate);\n\n  const Button = _ref => {\n    let {\n      label,\n      onClick\n    } = _ref;\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onClick,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  };\n\n  const subMonthsButton = month => {\n    return subMonths(month, 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Calendar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setTargetDate(current => subMonths(current, 1)),\n          children: \"\\u524D\\u306E\\u6708\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setTargetDate(new Date()),\n          children: \"\\u4ECA\\u6708\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setTargetDate(current => subMonths(current, 1)),\n          children: \"\\u524D\\u306E\\u6708\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), format(targetDate, 'y年M月'), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u65E5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u6708\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u706B\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u6C34\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u6728\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u91D1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u571F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: calendar.map((weekRow, rowNum) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: weekRow.map(date => /*#__PURE__*/_jsxDEV(\"td\", {\n              children: getDate(date)\n            }, getDay(date), false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 23\n            }, this))\n          }, rowNum, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Calendar, \"jv0FYgQZVcwNlj3CdtynMGyz8Sw=\");\n\n_c = Calendar;\nexport default Calendar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"sources":["/Users/taiki/Desktop/household/frontend/src/components/Calendar/Calendar.tsx"],"names":["React","useState","format","getDate","getDay","eachDayOfInterval","endOfWeek","eachWeekOfInterval","subMonths","startOfMonth","endOfMonth","getCalendarArray","date","sundays","start","end","map","sunday","Calendar","targetDate","setTargetDate","Date","calendar","Button","label","onClick","subMonthsButton","month","current","weekRow","rowNum"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport format from 'date-fns/format';\nimport getDate from 'date-fns/getDate';\nimport getDay from 'date-fns/getDay';\nimport eachDayOfInterval from 'date-fns/eachDayOfInterval';\nimport endOfWeek from 'date-fns/endOfWeek';\nimport eachWeekOfInterval from 'date-fns/eachWeekOfInterval';\nimport addMonths from 'date-fns/addMonths';\nimport subMonths from 'date-fns/subMonths';\nimport startOfMonth from 'date-fns/startOfMonth';\nimport endOfMonth from 'date-fns/endOfMonth';\n\nconst getCalendarArray = (date: Date) => {\n  const sundays = eachWeekOfInterval({\n    start: startOfMonth(date),\n    end: endOfMonth(date),\n  });\n\n  return sundays.map((sunday) => \n    eachDayOfInterval({ start: sunday, end: endOfWeek(sunday) })\n  );\n};\n\ntype Props = {\n  label: string;\n  onClick: (...args: any[]) => void;\n}\n\nconst Calendar: React.FC = () => {\n  const [targetDate, setTargetDate] = useState(new Date())\n  const calendar = getCalendarArray(targetDate);\n\n  const Button = ({label, onClick}: Props) => {\n    return (\n      <button onClick={onClick}>\n        {label}\n      </button>\n    )\n  };\n\n  const subMonthsButton = (month: Date) => {\n    return subMonths(month, 1)\n  }\n  \n  return (\n    <>\n      <div>Calendar</div>\n      <div>\n        <div>\n          <button onClick={() => setTargetDate(current => subMonths(current, 1))}>前の月</button>\n          <button onClick={() => setTargetDate(new Date())}>今月</button>\n          <button onClick={() => setTargetDate(current => subMonths(current, 1))}>前の月</button>\n        </div>\n        {format(targetDate, 'y年M月')}\n        <table>\n          <thead>\n            <tr>\n              <th>日</th>\n              <th>月</th>\n              <th>火</th>\n              <th>水</th>\n              <th>木</th>\n              <th>金</th>\n              <th>土</th>\n            </tr>\n          </thead>\n          <tbody>\n            {\n              calendar.map((weekRow, rowNum) => (\n                <tr key={rowNum}>\n                  {\n                    weekRow.map((date) => (\n                      <td key={getDay(date)}>{getDate(date)}</td>\n                    ))\n                  }\n                </tr>\n              ))\n            }\n          </tbody>\n        </table>\n      </div>\n    </>\n  )\n}\n\nexport default Calendar"]},"metadata":{},"sourceType":"module"}