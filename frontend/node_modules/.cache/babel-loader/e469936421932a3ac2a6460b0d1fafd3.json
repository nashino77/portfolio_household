{"ast":null,"code":"import { __assign, __read, __spreadArray, __values } from \"tslib\";\nimport { camelCase as camelCaseString } from 'camel-case';\nimport { snakeCase as snakeCaseString } from 'snake-case';\nimport { headerCase as headerCaseString } from 'header-case';\nimport { applyCaseOptions, preserveSpecificKeys } from './decorators';\nimport { isFormData, isTransformable, isURLSearchParams } from './util';\nvar caseFunctions = {\n  snake: snakeCaseString,\n  camel: camelCaseString,\n  header: headerCaseString\n};\n\nvar transformObjectUsingCallbackRecursive = function transformObjectUsingCallbackRecursive(data, fn, overwrite) {\n  var e_1, _a, e_2, _b, e_3, _c;\n\n  if (!isTransformable(data)) {\n    return data;\n  }\n  /* eslint-disable no-console */\n  // Check FormData/URLSearchParams compatibility\n\n\n  if ((isFormData(data) || isURLSearchParams(data)) && (!data.entries || overwrite && !data.delete)) {\n    var type = isFormData(data) ? 'FormData' : 'URLSearchParams';\n    var polyfill = isFormData(data) ? 'https://github.com/jimmywarting/FormData' : 'https://github.com/jerrybendy/url-search-params-polyfill';\n\n    if (typeof navigator !== 'undefined' && navigator.product === 'ReactNative') {\n      // You cannot transform FormData/URLSearchParams on React Native\n      console.warn(\"Be careful that \" + type + \" cannot be transformed on React Native. If you intentionally implemented, ignore this kind of warning: https://facebook.github.io/react-native/docs/debugging.html\");\n    } else {\n      if (!data.entries) {\n        // You need to polyfill `entries` method\n        console.warn(\"You must use polyfill of \" + type + \".prototype.entries() on Internet Explorer or Safari: \" + polyfill);\n      }\n\n      if (overwrite && !data.delete) {\n        // You need to polyfill `delete` method for overwriting\n        console.warn(\"You must use polyfill of \" + type + \".prototype.delete() on Internet Explorer or Safari: \" + polyfill);\n      }\n    }\n\n    return data;\n  }\n  /* eslint-enable no-console */\n\n\n  var prototype = Object.getPrototypeOf(data); // Storage of new values.\n  // New instances are created when overwriting is disabled.\n\n  var store = overwrite ? data : !prototype ? Object.create(null) : new prototype.constructor(); // We need to clean up all entries before overwriting.\n\n  var series;\n\n  if (isFormData(data) || isURLSearchParams(data)) {\n    // Create native iterator from FormData/URLSearchParams\n    series = data.entries();\n\n    if (overwrite) {\n      // When overwriting, native iterator needs to be copied as array.\n      series = __spreadArray([], __read(series), false);\n\n      try {\n        for (var series_1 = __values(series), series_1_1 = series_1.next(); !series_1_1.done; series_1_1 = series_1.next()) {\n          var _d = __read(series_1_1.value, 1),\n              key = _d[0];\n\n          data.delete(key);\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (series_1_1 && !series_1_1.done && (_a = series_1.return)) _a.call(series_1);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n    }\n  } else {\n    // Create array from objects\n    series = Object.entries(data); // Array keys never change, so we don't need to clean up\n\n    if (overwrite && !Array.isArray(data)) {\n      try {\n        for (var series_2 = __values(series), series_2_1 = series_2.next(); !series_2_1.done; series_2_1 = series_2.next()) {\n          var _e = __read(series_2_1.value, 1),\n              key = _e[0];\n\n          delete data[key];\n        }\n      } catch (e_2_1) {\n        e_2 = {\n          error: e_2_1\n        };\n      } finally {\n        try {\n          if (series_2_1 && !series_2_1.done && (_b = series_2.return)) _b.call(series_2);\n        } finally {\n          if (e_2) throw e_2.error;\n        }\n      }\n    }\n  }\n\n  try {\n    for (var series_3 = __values(series), series_3_1 = series_3.next(); !series_3_1.done; series_3_1 = series_3.next()) {\n      var _f = __read(series_3_1.value, 2),\n          key = _f[0],\n          value = _f[1];\n\n      if (isFormData(store) || isURLSearchParams(store)) {\n        store.append(fn(key), value);\n      } else if (key !== '__proto__') {\n        store[fn(typeof key === 'string' ? key : \"\" + key)] = transformObjectUsingCallbackRecursive(value, fn, overwrite);\n      }\n    }\n  } catch (e_3_1) {\n    e_3 = {\n      error: e_3_1\n    };\n  } finally {\n    try {\n      if (series_3_1 && !series_3_1.done && (_c = series_3.return)) _c.call(series_3);\n    } finally {\n      if (e_3) throw e_3.error;\n    }\n  }\n\n  return store;\n};\n\nvar transformObjectUsingCallback = function transformObjectUsingCallback(data, fn, options) {\n  fn = applyCaseOptions(fn, __assign({\n    stripRegexp: /[^A-Z0-9[\\]]+/gi\n  }, options === null || options === void 0 ? void 0 : options.caseOptions));\n\n  if (options === null || options === void 0 ? void 0 : options.preservedKeys) {\n    fn = preserveSpecificKeys(fn, options.preservedKeys);\n  }\n\n  return transformObjectUsingCallbackRecursive(data, fn, (options === null || options === void 0 ? void 0 : options.overwrite) || false);\n};\n\nexport var createObjectTransformer = function createObjectTransformer(fn) {\n  return function (data, options) {\n    return transformObjectUsingCallback(data, fn, options);\n  };\n};\nexport var createObjectTransformerOf = function createObjectTransformerOf(functionName, options) {\n  return createObjectTransformer((options === null || options === void 0 ? void 0 : options[functionName]) || caseFunctions[functionName]);\n};\nexport var createObjectTransformers = function createObjectTransformers(options) {\n  var e_4, _a;\n\n  var functionNames = Object.keys(caseFunctions);\n  var objectTransformers = {};\n\n  try {\n    for (var functionNames_1 = __values(functionNames), functionNames_1_1 = functionNames_1.next(); !functionNames_1_1.done; functionNames_1_1 = functionNames_1.next()) {\n      var functionName = functionNames_1_1.value;\n      objectTransformers[functionName] = createObjectTransformerOf(functionName, options);\n    }\n  } catch (e_4_1) {\n    e_4 = {\n      error: e_4_1\n    };\n  } finally {\n    try {\n      if (functionNames_1_1 && !functionNames_1_1.done && (_a = functionNames_1.return)) _a.call(functionNames_1);\n    } finally {\n      if (e_4) throw e_4.error;\n    }\n  }\n\n  return objectTransformers;\n};","map":{"version":3,"sources":["/Users/taiki/Desktop/household/frontend/node_modules/axios-case-converter/es/transformers.js"],"names":["__assign","__read","__spreadArray","__values","camelCase","camelCaseString","snakeCase","snakeCaseString","headerCase","headerCaseString","applyCaseOptions","preserveSpecificKeys","isFormData","isTransformable","isURLSearchParams","caseFunctions","snake","camel","header","transformObjectUsingCallbackRecursive","data","fn","overwrite","e_1","_a","e_2","_b","e_3","_c","entries","delete","type","polyfill","navigator","product","console","warn","prototype","Object","getPrototypeOf","store","create","constructor","series","series_1","series_1_1","next","done","_d","value","key","e_1_1","error","return","call","Array","isArray","series_2","series_2_1","_e","e_2_1","series_3","series_3_1","_f","append","e_3_1","transformObjectUsingCallback","options","stripRegexp","caseOptions","preservedKeys","createObjectTransformer","createObjectTransformerOf","functionName","createObjectTransformers","e_4","functionNames","keys","objectTransformers","functionNames_1","functionNames_1_1","e_4_1"],"mappings":"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","sourcesContent":["import { __assign, __read, __spreadArray, __values } from \"tslib\";\nimport { camelCase as camelCaseString } from 'camel-case';\nimport { snakeCase as snakeCaseString } from 'snake-case';\nimport { headerCase as headerCaseString } from 'header-case';\nimport { applyCaseOptions, preserveSpecificKeys } from './decorators';\nimport { isFormData, isTransformable, isURLSearchParams } from './util';\nvar caseFunctions = {\n    snake: snakeCaseString,\n    camel: camelCaseString,\n    header: headerCaseString,\n};\nvar transformObjectUsingCallbackRecursive = function (data, fn, overwrite) {\n    var e_1, _a, e_2, _b, e_3, _c;\n    if (!isTransformable(data)) {\n        return data;\n    }\n    /* eslint-disable no-console */\n    // Check FormData/URLSearchParams compatibility\n    if ((isFormData(data) || isURLSearchParams(data)) &&\n        (!data.entries || (overwrite && !data.delete))) {\n        var type = isFormData(data) ? 'FormData' : 'URLSearchParams';\n        var polyfill = isFormData(data)\n            ? 'https://github.com/jimmywarting/FormData'\n            : 'https://github.com/jerrybendy/url-search-params-polyfill';\n        if (typeof navigator !== 'undefined' &&\n            navigator.product === 'ReactNative') {\n            // You cannot transform FormData/URLSearchParams on React Native\n            console.warn(\"Be careful that \" + type + \" cannot be transformed on React Native. If you intentionally implemented, ignore this kind of warning: https://facebook.github.io/react-native/docs/debugging.html\");\n        }\n        else {\n            if (!data.entries) {\n                // You need to polyfill `entries` method\n                console.warn(\"You must use polyfill of \" + type + \".prototype.entries() on Internet Explorer or Safari: \" + polyfill);\n            }\n            if (overwrite && !data.delete) {\n                // You need to polyfill `delete` method for overwriting\n                console.warn(\"You must use polyfill of \" + type + \".prototype.delete() on Internet Explorer or Safari: \" + polyfill);\n            }\n        }\n        return data;\n    }\n    /* eslint-enable no-console */\n    var prototype = Object.getPrototypeOf(data);\n    // Storage of new values.\n    // New instances are created when overwriting is disabled.\n    var store = overwrite\n        ? data\n        : !prototype\n            ? Object.create(null)\n            : new prototype.constructor();\n    // We need to clean up all entries before overwriting.\n    var series;\n    if (isFormData(data) || isURLSearchParams(data)) {\n        // Create native iterator from FormData/URLSearchParams\n        series = data.entries();\n        if (overwrite) {\n            // When overwriting, native iterator needs to be copied as array.\n            series = __spreadArray([], __read(series), false);\n            try {\n                for (var series_1 = __values(series), series_1_1 = series_1.next(); !series_1_1.done; series_1_1 = series_1.next()) {\n                    var _d = __read(series_1_1.value, 1), key = _d[0];\n                    data.delete(key);\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (series_1_1 && !series_1_1.done && (_a = series_1.return)) _a.call(series_1);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n        }\n    }\n    else {\n        // Create array from objects\n        series = Object.entries(data);\n        // Array keys never change, so we don't need to clean up\n        if (overwrite && !Array.isArray(data)) {\n            try {\n                for (var series_2 = __values(series), series_2_1 = series_2.next(); !series_2_1.done; series_2_1 = series_2.next()) {\n                    var _e = __read(series_2_1.value, 1), key = _e[0];\n                    delete data[key];\n                }\n            }\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\n            finally {\n                try {\n                    if (series_2_1 && !series_2_1.done && (_b = series_2.return)) _b.call(series_2);\n                }\n                finally { if (e_2) throw e_2.error; }\n            }\n        }\n    }\n    try {\n        for (var series_3 = __values(series), series_3_1 = series_3.next(); !series_3_1.done; series_3_1 = series_3.next()) {\n            var _f = __read(series_3_1.value, 2), key = _f[0], value = _f[1];\n            if (isFormData(store) || isURLSearchParams(store)) {\n                store.append(fn(key), value);\n            }\n            else if (key !== '__proto__') {\n                store[fn(typeof key === 'string' ? key : \"\" + key)] =\n                    transformObjectUsingCallbackRecursive(value, fn, overwrite);\n            }\n        }\n    }\n    catch (e_3_1) { e_3 = { error: e_3_1 }; }\n    finally {\n        try {\n            if (series_3_1 && !series_3_1.done && (_c = series_3.return)) _c.call(series_3);\n        }\n        finally { if (e_3) throw e_3.error; }\n    }\n    return store;\n};\nvar transformObjectUsingCallback = function (data, fn, options) {\n    fn = applyCaseOptions(fn, __assign({ stripRegexp: /[^A-Z0-9[\\]]+/gi }, options === null || options === void 0 ? void 0 : options.caseOptions));\n    if (options === null || options === void 0 ? void 0 : options.preservedKeys) {\n        fn = preserveSpecificKeys(fn, options.preservedKeys);\n    }\n    return transformObjectUsingCallbackRecursive(data, fn, (options === null || options === void 0 ? void 0 : options.overwrite) || false);\n};\nexport var createObjectTransformer = function (fn) {\n    return function (data, options) {\n        return transformObjectUsingCallback(data, fn, options);\n    };\n};\nexport var createObjectTransformerOf = function (functionName, options) {\n    return createObjectTransformer((options === null || options === void 0 ? void 0 : options[functionName]) || caseFunctions[functionName]);\n};\nexport var createObjectTransformers = function (options) {\n    var e_4, _a;\n    var functionNames = Object.keys(caseFunctions);\n    var objectTransformers = {};\n    try {\n        for (var functionNames_1 = __values(functionNames), functionNames_1_1 = functionNames_1.next(); !functionNames_1_1.done; functionNames_1_1 = functionNames_1.next()) {\n            var functionName = functionNames_1_1.value;\n            objectTransformers[functionName] = createObjectTransformerOf(functionName, options);\n        }\n    }\n    catch (e_4_1) { e_4 = { error: e_4_1 }; }\n    finally {\n        try {\n            if (functionNames_1_1 && !functionNames_1_1.done && (_a = functionNames_1.return)) _a.call(functionNames_1);\n        }\n        finally { if (e_4) throw e_4.error; }\n    }\n    return objectTransformers;\n};\n"]},"metadata":{},"sourceType":"module"}