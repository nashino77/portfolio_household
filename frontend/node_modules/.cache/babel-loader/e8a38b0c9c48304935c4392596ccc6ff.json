{"ast":null,"code":"import { __assign, __read, __spreadArray, __values } from \"tslib\";\nimport { createObjectTransformers } from './transformers';\nimport { isPlainObject } from './util';\nexport var createSnakeParamsInterceptor = function (options) {\n  var snake = createObjectTransformers(options === null || options === void 0 ? void 0 : options.caseFunctions).snake;\n  return function (config) {\n    if (config.params) {\n      config.params = snake(config.params, options);\n    }\n\n    return config;\n  };\n};\nexport var createSnakeRequestTransformer = function (options) {\n  var _a = createObjectTransformers(options === null || options === void 0 ? void 0 : options.caseFunctions),\n      snake = _a.snake,\n      header = _a.header;\n\n  return function (data, headers) {\n    var e_1, _a, _b;\n\n    if (!(options === null || options === void 0 ? void 0 : options.ignoreHeaders) && isPlainObject(headers)) {\n      try {\n        for (var _c = __values(Object.entries(headers)), _d = _c.next(); !_d.done; _d = _c.next()) {\n          var _e = __read(_d.value, 2),\n              key = _e[0],\n              value = _e[1];\n\n          header(value, __assign({\n            overwrite: true\n          }, options));\n\n          if (!['common', 'delete', 'get', 'head', 'post', 'put', 'patch'].includes(key)) {\n            delete headers[key];\n            headers[Object.keys(header((_b = {}, _b[key] = null, _b), options))[0]] = value;\n          }\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n    }\n\n    return snake(data, options);\n  };\n};\nexport var createCamelResponseTransformer = function (options) {\n  var camel = createObjectTransformers(options === null || options === void 0 ? void 0 : options.caseFunctions).camel;\n  return function (data, headers) {\n    if (!(options === null || options === void 0 ? void 0 : options.ignoreHeaders)) {\n      camel(headers, __assign({\n        overwrite: true\n      }, options));\n    }\n\n    return camel(data, options);\n  };\n};\nexport var applyCaseMiddleware = function (axios, options) {\n  var _a, _b, _c;\n\n  axios.defaults.transformRequest = __spreadArray([((_a = options === null || options === void 0 ? void 0 : options.caseMiddleware) === null || _a === void 0 ? void 0 : _a.requestTransformer) || createSnakeRequestTransformer(options)], __read(Array.isArray(axios.defaults.transformRequest) ? axios.defaults.transformRequest : axios.defaults.transformRequest !== undefined ? [axios.defaults.transformRequest] : []), false);\n  axios.defaults.transformResponse = __spreadArray(__spreadArray([], __read(Array.isArray(axios.defaults.transformResponse) ? axios.defaults.transformResponse : axios.defaults.transformResponse !== undefined ? [axios.defaults.transformResponse] : []), false), [((_b = options === null || options === void 0 ? void 0 : options.caseMiddleware) === null || _b === void 0 ? void 0 : _b.responseTransformer) || createCamelResponseTransformer(options)], false);\n  axios.interceptors.request.use(((_c = options === null || options === void 0 ? void 0 : options.caseMiddleware) === null || _c === void 0 ? void 0 : _c.requestInterceptor) || createSnakeParamsInterceptor(options));\n  return axios;\n};","map":{"version":3,"sources":["/Users/taiki/Desktop/household_source/frontend/node_modules/axios-case-converter/es/middleware.js"],"names":["__assign","__read","__spreadArray","__values","createObjectTransformers","isPlainObject","createSnakeParamsInterceptor","options","snake","caseFunctions","config","params","createSnakeRequestTransformer","_a","header","data","headers","e_1","_b","ignoreHeaders","_c","Object","entries","_d","next","done","_e","value","key","overwrite","includes","keys","e_1_1","error","return","call","createCamelResponseTransformer","camel","applyCaseMiddleware","axios","defaults","transformRequest","caseMiddleware","requestTransformer","Array","isArray","undefined","transformResponse","responseTransformer","interceptors","request","use","requestInterceptor"],"mappings":"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","sourcesContent":["import { __assign, __read, __spreadArray, __values } from \"tslib\";\nimport { createObjectTransformers } from './transformers';\nimport { isPlainObject } from './util';\nexport var createSnakeParamsInterceptor = function (options) {\n    var snake = createObjectTransformers(options === null || options === void 0 ? void 0 : options.caseFunctions).snake;\n    return function (config) {\n        if (config.params) {\n            config.params = snake(config.params, options);\n        }\n        return config;\n    };\n};\nexport var createSnakeRequestTransformer = function (options) {\n    var _a = createObjectTransformers(options === null || options === void 0 ? void 0 : options.caseFunctions), snake = _a.snake, header = _a.header;\n    return function (data, headers) {\n        var e_1, _a, _b;\n        if (!(options === null || options === void 0 ? void 0 : options.ignoreHeaders) && isPlainObject(headers)) {\n            try {\n                for (var _c = __values(Object.entries(headers)), _d = _c.next(); !_d.done; _d = _c.next()) {\n                    var _e = __read(_d.value, 2), key = _e[0], value = _e[1];\n                    header(value, __assign({ overwrite: true }, options));\n                    if (!['common', 'delete', 'get', 'head', 'post', 'put', 'patch'].includes(key)) {\n                        delete headers[key];\n                        headers[Object.keys(header((_b = {}, _b[key] = null, _b), options))[0]] = value;\n                    }\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n        }\n        return snake(data, options);\n    };\n};\nexport var createCamelResponseTransformer = function (options) {\n    var camel = createObjectTransformers(options === null || options === void 0 ? void 0 : options.caseFunctions).camel;\n    return function (data, headers) {\n        if (!(options === null || options === void 0 ? void 0 : options.ignoreHeaders)) {\n            camel(headers, __assign({ overwrite: true }, options));\n        }\n        return camel(data, options);\n    };\n};\nexport var applyCaseMiddleware = function (axios, options) {\n    var _a, _b, _c;\n    axios.defaults.transformRequest = __spreadArray([\n        ((_a = options === null || options === void 0 ? void 0 : options.caseMiddleware) === null || _a === void 0 ? void 0 : _a.requestTransformer) ||\n            createSnakeRequestTransformer(options)\n    ], __read((Array.isArray(axios.defaults.transformRequest)\n        ? axios.defaults.transformRequest\n        : axios.defaults.transformRequest !== undefined\n            ? [axios.defaults.transformRequest]\n            : [])), false);\n    axios.defaults.transformResponse = __spreadArray(__spreadArray([], __read((Array.isArray(axios.defaults.transformResponse)\n        ? axios.defaults.transformResponse\n        : axios.defaults.transformResponse !== undefined\n            ? [axios.defaults.transformResponse]\n            : [])), false), [\n        ((_b = options === null || options === void 0 ? void 0 : options.caseMiddleware) === null || _b === void 0 ? void 0 : _b.responseTransformer) ||\n            createCamelResponseTransformer(options),\n    ], false);\n    axios.interceptors.request.use(((_c = options === null || options === void 0 ? void 0 : options.caseMiddleware) === null || _c === void 0 ? void 0 : _c.requestInterceptor) ||\n        createSnakeParamsInterceptor(options));\n    return axios;\n};\n"]},"metadata":{},"sourceType":"module"}