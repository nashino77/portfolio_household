{"ast":null,"code":"var _jsxFileName = \"/Users/taiki/Desktop/household/frontend/src/components/Calendar/Calendar.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport format from 'date-fns/format';\nimport getDate from 'date-fns/getDate';\nimport getDay from 'date-fns/getDay';\nimport eachDayOfInterval from 'date-fns/eachDayOfInterval';\nimport endOfWeek from 'date-fns/endOfWeek';\nimport eachWeekOfInterval from 'date-fns/eachWeekOfInterval';\nimport addMonths from 'date-fns/addMonths';\nimport subMonths from 'date-fns/subMonths';\nimport startOfMonth from 'date-fns/startOfMonth';\nimport endOfMonth from 'date-fns/endOfMonth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst getCalendarArray = date => {\n  const sundays = eachWeekOfInterval({\n    start: startOfMonth(date),\n    end: endOfMonth(date)\n  });\n  return sundays.map(sunday => eachDayOfInterval({\n    start: sunday,\n    end: endOfWeek(sunday)\n  }));\n};\n\nconst Calendar = () => {\n  _s();\n\n  const [targetDate, setTargetDate] = useState(new Date());\n  const calendar = getCalendarArray(targetDate);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Calendar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setTargetDate(current => subMonths(current, 1)),\n          children: \"\\u524D\\u306E\\u6708\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setTargetDate(new Date()),\n          children: \"\\u4ECA\\u6708\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setTargetDate(current => addMonths(current, 1)),\n          children: \"\\u6B21\\u306E\\u6708\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), format(targetDate, 'y年M月'), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u65E5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u6708\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u706B\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u6C34\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u6728\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u91D1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u571F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: calendar.map((weekRow, rowNum) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: weekRow.map(date => /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [getDate(date), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  height\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"\\u4F8B\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"\\u4F8B\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 25\n              }, this)]\n            }, getDay(date), true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 23\n            }, this))\n          }, rowNum, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Calendar, \"jv0FYgQZVcwNlj3CdtynMGyz8Sw=\");\n\n_c = Calendar;\nexport default Calendar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"sources":["/Users/taiki/Desktop/household/frontend/src/components/Calendar/Calendar.tsx"],"names":["React","useState","format","getDate","getDay","eachDayOfInterval","endOfWeek","eachWeekOfInterval","addMonths","subMonths","startOfMonth","endOfMonth","getCalendarArray","date","sundays","start","end","map","sunday","Calendar","targetDate","setTargetDate","Date","calendar","current","weekRow","rowNum","height"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport format from 'date-fns/format';\nimport getDate from 'date-fns/getDate';\nimport getDay from 'date-fns/getDay';\nimport eachDayOfInterval from 'date-fns/eachDayOfInterval';\nimport endOfWeek from 'date-fns/endOfWeek';\nimport eachWeekOfInterval from 'date-fns/eachWeekOfInterval';\nimport addMonths from 'date-fns/addMonths';\nimport subMonths from 'date-fns/subMonths';\nimport startOfMonth from 'date-fns/startOfMonth';\nimport endOfMonth from 'date-fns/endOfMonth';\n\nconst getCalendarArray = (date: Date) => {\n  const sundays = eachWeekOfInterval({\n    start: startOfMonth(date),\n    end: endOfMonth(date),\n  });\n\n  return sundays.map((sunday) => \n    eachDayOfInterval({ start: sunday, end: endOfWeek(sunday) })\n  );\n};\n\n\nconst Calendar: React.FC = () => {\n  const [targetDate, setTargetDate] = useState(new Date())\n  const calendar = getCalendarArray(targetDate);\n\n  return (\n    <>\n      <div>Calendar</div>\n      <div>\n        <div>\n          <button onClick={() => setTargetDate(current => subMonths(current, 1))}>前の月</button>\n          <button onClick={() => setTargetDate(new Date())}>今月</button>\n          <button onClick={() => setTargetDate(current => addMonths(current, 1))}>次の月</button>\n        </div>\n        {format(targetDate, 'y年M月')}\n        <table>\n          <thead>\n            <tr>\n              <th>日</th>\n              <th>月</th>\n              <th>火</th>\n              <th>水</th>\n              <th>木</th>\n              <th>金</th>\n              <th>土</th>\n            </tr>\n          </thead>\n          <tbody>\n            {\n              calendar.map((weekRow, rowNum) => (\n                <tr key={rowNum}>\n                  {\n                    weekRow.map((date) => (\n                      <td key={getDay(date)}>\n                        {getDate(date)}\n                        <div style={{ height }}>\n                          <p>例</p>\n                          <p>例</p>\n                        </div>\n                      </td>\n                    ))\n                  }\n                </tr>\n              ))\n            }\n          </tbody>\n        </table>\n      </div>\n    </>\n  )\n}\n\nexport default Calendar"]},"metadata":{},"sourceType":"module"}