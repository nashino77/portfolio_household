{"ast":null,"code":"import React from'react';// date-fns\nimport format from'date-fns/format';import getDate from'date-fns/getDate';import getDay from'date-fns/getDay';import addMonths from'date-fns/addMonths';import subMonths from'date-fns/subMonths';import{parse}from'date-fns';// css\nimport style from'./Calendar.module.scss';// interface\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Calendar=function Calendar(props){var setTargetDate=props.setTargetDate,calendar=props.calendar,spendings=props.spendings;return/*#__PURE__*/_jsxs(\"div\",{className:style.calendar,children:[/*#__PURE__*/_jsxs(\"div\",{className:style.select_month,children:[/*#__PURE__*/_jsx(\"div\",{className:style.selectbutton_month,onClick:function onClick(){return setTargetDate(function(current){return subMonths(current,1);});},children:\"\\u2039 \\u524D\\u306E\\u6708\"}),/*#__PURE__*/_jsx(\"div\",{className:style.selectbutton_month,onClick:function onClick(){return setTargetDate(new Date());},children:\"\\u4ECA\\u6708\"}),/*#__PURE__*/_jsx(\"div\",{className:style.selectbutton_month,onClick:function onClick(){return setTargetDate(function(current){return addMonths(current,1);});},children:\"\\u6B21\\u306E\\u6708 \\u203A\"})]}),/*#__PURE__*/_jsxs(\"table\",{className:style.calendar_body,children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{className:style.calendar_day,children:[/*#__PURE__*/_jsx(\"th\",{children:\"\\u65E5\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\u6708\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\u706B\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\u6C34\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\u6728\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\u91D1\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\u571F\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{className:style.calendar_main,children:calendar.map(function(weekRow,rowNum){return/*#__PURE__*/_jsx(\"tr\",{className:style.calendar_week,children:weekRow.map(function(date){return/*#__PURE__*/_jsxs(\"td\",{className:style.calendar_date,children:[/*#__PURE__*/_jsx(\"div\",{className:\"\\n                          \".concat(style.date,\"\\n                          \").concat(getDay(date)===0?style.sunday:''||getDay(date)===6?style.saturday:''),children:getDate(date)}),/*#__PURE__*/_jsxs(\"div\",{className:style.date_amount,children:[\"\\xA5\",spendings// eslint-disable-next-line array-callback-return\n.filter(function(val){var changeStringDate=parse(val.usedAt,'yyyy-MM-dd',new Date());var usedDate=format(changeStringDate,'yyyy-MM-dd');var calendarDate=format(date,'yyyy-MM-dd');if(usedDate===calendarDate)return val;}).reduce(function(sum,spending){return sum+spending.amountUsed;},0)]})]},getDay(date));})},rowNum);})})]})]});};export default Calendar;","map":{"version":3,"sources":["/Users/taiki/Desktop/household/frontend/src/components/Spending/Calendar/Calendar.tsx"],"names":["React","format","getDate","getDay","addMonths","subMonths","parse","style","Calendar","props","setTargetDate","calendar","spendings","select_month","selectbutton_month","current","Date","calendar_body","calendar_day","calendar_main","map","weekRow","rowNum","calendar_week","date","calendar_date","sunday","saturday","date_amount","filter","val","changeStringDate","usedAt","usedDate","calendarDate","reduce","sum","spending","amountUsed"],"mappings":"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","sourcesContent":["import React from 'react';\n// date-fns\nimport format from 'date-fns/format';\nimport getDate from 'date-fns/getDate';\nimport getDay from 'date-fns/getDay';\nimport addMonths from 'date-fns/addMonths';\nimport subMonths from 'date-fns/subMonths';\nimport { parse } from 'date-fns';\n// css\nimport style from './Calendar.module.scss';\n// interface\nimport { GetSpending } from '../../../interface'\n\ntype Props = {\n  targetDate: Date;\n  setTargetDate: React.Dispatch<React.SetStateAction<Date>>;\n  calendar: Date[][];\n  spendings: GetSpending[];\n  urlParams: { householdId: string; };\n};\n\nconst Calendar: React.FC<Props> = (props) => {\n  const { setTargetDate, calendar, spendings } = props;\n\n  return (\n    <div className={style.calendar}>\n      <div className={style.select_month}>\n        <div className={style.selectbutton_month} onClick={() => setTargetDate(current => subMonths(current, 1))}>\n          &lsaquo; 前の月\n        </div>\n        <div className={style.selectbutton_month} onClick={() => setTargetDate(new Date())}>\n          今月\n        </div>\n        <div className={style.selectbutton_month} onClick={() => setTargetDate(current => addMonths(current, 1))}>\n          次の月 &rsaquo;\n        </div>\n      </div>\n      <table className={style.calendar_body}>\n        <thead>\n          <tr className={style.calendar_day}>\n            <th>日</th>\n            <th>月</th>\n            <th>火</th>\n            <th>水</th>\n            <th>木</th>\n            <th>金</th>\n            <th>土</th>\n          </tr>\n        </thead>\n        <tbody className={style.calendar_main}>\n          {\n            calendar.map((weekRow, rowNum) => (\n              <tr className={style.calendar_week} key={rowNum}>\n                {\n                  weekRow.map((date) => (\n                    <td key={getDay(date)} className={style.calendar_date}>\n                      <div\n                        className={`\n                          ${style.date}\n                          ${\n                            getDay(date) === 0 ? style.sunday : '' ||\n                            getDay(date) === 6 ? style.saturday : ''\n                          }`\n                      }>\n                        {getDate(date)}\n                      </div>\n                      <div className={style.date_amount}>\n                        ¥\n                        {\n                          spendings\n                          // eslint-disable-next-line array-callback-return\n                          .filter(val => {\n                            const changeStringDate = parse(val.usedAt, 'yyyy-MM-dd', new Date());\n                            const usedDate = format(changeStringDate, 'yyyy-MM-dd');\n                            const calendarDate = format(date, 'yyyy-MM-dd');\n                            if (usedDate === calendarDate) return val;\n                          })\n                          .reduce((sum, spending) => sum + spending.amountUsed, 0)\n                            }\n                      </div>\n                    </td>\n                  ))\n                }\n              </tr>\n            ))\n          }\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nexport default Calendar"]},"metadata":{},"sourceType":"module"}