{"ast":null,"code":"var _jsxFileName = \"/Users/taiki/Desktop/household/frontend/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, createContext } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom'; // component\n\nimport SignUp from './components/Auth/SignUp';\nimport SignIn from './components/Auth/SignIn';\nimport Home from './components/Layout/Home'; // api\n\nimport { getCurrentUser } from './api/auth';\nimport Header from './components/Header/Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext({});\n\nconst App = () => {\n  _s();\n\n  const [loading, setLoading] = useState(true);\n  const [isSignedIn, setIsSignedIn] = useState(false);\n  const [currentUser, setCurrentUser] = useState(); // 認証済みユーザー情報の取得関数\n\n  const handleGetCurrentUser = async () => {\n    try {\n      const res = await getCurrentUser();\n      console.log(res);\n\n      if ((res === null || res === void 0 ? void 0 : res.data.isLogin) === true) {\n        setIsSignedIn(true);\n        setCurrentUser(res === null || res === void 0 ? void 0 : res.data.data); // console.log(res?.data.data);\n      } else {\n        console.log(\"No current user\");\n      }\n\n      ;\n    } catch (err) {\n      console.log(err);\n    }\n\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    handleGetCurrentUser();\n  }, [setCurrentUser]); // ユーザー認証済みの判定で表示ページの変更\n\n  const Private = _ref => {\n    let {\n      children\n    } = _ref;\n\n    if (!loading) {\n      if (isSignedIn) {\n        return children;\n      } else {\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/signin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 16\n        }, this);\n      }\n    } else {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n    }\n\n    ;\n  }; // const handleGetTest = async () => {\n  //   const res = await getTest();\n  //   console.log(res.data);\n  // };\n\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n      value: {\n        loading,\n        setLoading,\n        isSignedIn,\n        setIsSignedIn,\n        currentUser,\n        setCurrentUser\n      },\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/signup\",\n          component: SignUp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/signin\",\n          component: SignIn\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Private, {\n          children: /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            component: Home\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"MRvxv/wPOvGiX4YVo79MnhJQeh0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/taiki/Desktop/household/frontend/src/App.tsx"],"names":["React","useState","useEffect","createContext","BrowserRouter","Router","Switch","Route","Redirect","SignUp","SignIn","Home","getCurrentUser","Header","AuthContext","App","loading","setLoading","isSignedIn","setIsSignedIn","currentUser","setCurrentUser","handleGetCurrentUser","res","console","log","data","isLogin","err","Private","children"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, createContext } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\n\n// component\nimport SignUp from './components/Auth/SignUp';\nimport SignIn from './components/Auth/SignIn';\nimport Home from './components/Layout/Home';\n\n// api\nimport { getCurrentUser } from './api/auth';\nimport { getTest } from './api/auth';\n\n// interface\nimport { User } from './interface';\nimport Header from './components/Header/Header';\n\nimport { AUTH } from './urls';\n\nexport const AuthContext = createContext(\n  {} as {\n    loading: boolean,\n    setLoading: React.Dispatch<React.SetStateAction<boolean>>,\n    isSignedIn: boolean,\n    setIsSignedIn: React.Dispatch<React.SetStateAction<boolean>>,\n    currentUser: User | undefined,\n    setCurrentUser: React.Dispatch<React.SetStateAction<User | undefined>>,\n  }\n);\n\nconst App: React.FC = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [isSignedIn, setIsSignedIn] = useState<boolean>(false);\n  const [currentUser, setCurrentUser] = useState<User | undefined>();\n\n  // 認証済みユーザー情報の取得関数\n  const handleGetCurrentUser = async () => {\n    try {\n      const res = await getCurrentUser();\n      console.log(res);\n\n      if (res?.data.isLogin === true) {\n        setIsSignedIn(true);\n        setCurrentUser(res?.data.data);\n        // console.log(res?.data.data);\n      } else {\n        console.log(\"No current user\");\n      };\n    } catch (err : any) {\n      console.log(err);\n    }\n\n    setLoading(false);\n  };\n  \n  useEffect(() => {\n    handleGetCurrentUser();\n  }, [setCurrentUser]);\n\n  // ユーザー認証済みの判定で表示ページの変更\n  const Private = ({ children } : { children: React.ReactElement }) => {\n    if (!loading) {\n      if (isSignedIn) {\n        return children\n      } else {\n        return <Redirect to=\"/signin\" />\n      }\n    } else {\n      return <></>\n    };\n  };\n\n  // const handleGetTest = async () => {\n  //   const res = await getTest();\n  //   console.log(res.data);\n  // };\n\n  return (\n    <Router>\n      <AuthContext.Provider\n        value={{\n          loading,\n          setLoading,\n          isSignedIn,\n          setIsSignedIn,\n          currentUser,\n          setCurrentUser\n          }}\n        >\n        <Header />\n        <Switch>\n          <Route exact path=\"/signup\" component={SignUp} />\n          <Route exact path=\"/signin\" component={SignIn} />\n          <Private>\n            <Route exact path=\"/\" component={Home} />\n          </Private>\n        </Switch>\n      </AuthContext.Provider>\n    </Router>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}