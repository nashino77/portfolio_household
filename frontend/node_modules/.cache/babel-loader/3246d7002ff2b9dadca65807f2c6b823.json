{"ast":null,"code":"var _jsxFileName = \"/Users/taiki/Desktop/household/frontend/src/components/Auth/SignUp.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport Cookies from 'js-cookie';\nimport { AuthContext } from '../../App'; // api\n\nimport { signUp } from '../../api/auth'; // interface\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SignUp = () => {\n  _s();\n\n  const history = useHistory();\n  const {\n    setIsSignedIn,\n    setCurrentUser\n  } = useContext(AuthContext);\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordConfirmation, setPasswordConfirmation] = useState(\"\"); // サインアップ用\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const params = {\n      name: name,\n      email: email,\n      password: password,\n      passwordConfirmation: passwordConfirmation\n    };\n\n    try {\n      const res = await signUp(params);\n      console.log(res);\n\n      if (res.status === 200) {\n        // アカウント作成と同時にログイン処理\n        Cookies.set(\"_access_token\", res.headers[\"access-token\"]);\n        Cookies.set(\"_client\", res.headers[\"client\"]);\n        Cookies.set(\"_uid\", res.headers[\"uid\"]);\n        setIsSignedIn(true);\n        setCurrentUser(res.data.data);\n        history.push(\"/\");\n        console.log(\"サインアップしました\");\n      } else {\n        alert('登録ができませんでした');\n      }\n\n      ;\n    } catch (err) {\n      console.log(err);\n      alert('登録ができませんでした');\n    }\n\n    ;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"name\",\n        required: true,\n        type: \"text\",\n        value: name,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"email\",\n        required: true,\n        type: \"text\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"password\",\n        required: true,\n        type: \"text\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"passwordConfirmation\",\n        required: true,\n        type: \"text\",\n        value: passwordConfirmation,\n        onChange: e => setPasswordConfirmation(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: !name || !email || !password || !passwordConfirmation ? true : false,\n        onClick: handleSubmit,\n        children: \"\\u9001\\u4FE1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/signin\",\n      children: \"\\u30A2\\u30AB\\u30A6\\u30F3\\u30C8\\u767B\\u9332\\u6E08\\u307F\\u306F\\u3053\\u3061\\u3089\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(SignUp, \"zlr08LJc06V1/vQjkspt+IJm0+8=\", false, function () {\n  return [useHistory];\n});\n\n_c = SignUp;\nexport default SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["/Users/taiki/Desktop/household/frontend/src/components/Auth/SignUp.tsx"],"names":["React","useState","useContext","Link","useHistory","Cookies","AuthContext","signUp","SignUp","history","setIsSignedIn","setCurrentUser","name","setName","email","setEmail","password","setPassword","passwordConfirmation","setPasswordConfirmation","handleSubmit","e","preventDefault","params","res","console","log","status","set","headers","data","push","alert","err","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport Cookies from 'js-cookie';\nimport { AuthContext } from '../../App';\n\n// api\nimport { signUp } from '../../api/auth';\n\n// interface\nimport { SignUpParams } from '../../interface';\n\n\nconst SignUp: React.FC = () => {\n  const history = useHistory();\n\n  const { setIsSignedIn, setCurrentUser } = useContext(AuthContext);\n\n  const [name, setName] = useState<string>(\"\");\n  const [email, setEmail] = useState<string>(\"\");\n  const [password, setPassword] = useState<string>(\"\");\n  const [passwordConfirmation, setPasswordConfirmation] = useState<string>(\"\");\n  \n  // サインアップ用\n  const handleSubmit = async (e: React.MouseEvent<HTMLButtonElement>) => {\n    e.preventDefault();\n\n    const params: SignUpParams = {\n      name: name,\n      email: email,\n      password: password,\n      passwordConfirmation: passwordConfirmation,\n    };\n\n    try {\n      const res = await signUp(params);\n      console.log(res);\n\n      if (res.status === 200) {\n        // アカウント作成と同時にログイン処理\n        Cookies.set(\"_access_token\", res.headers[\"access-token\"]);\n        Cookies.set(\"_client\", res.headers[\"client\"]);\n        Cookies.set(\"_uid\", res.headers[\"uid\"]);\n\n        setIsSignedIn(true);\n        setCurrentUser(res.data.data);\n\n        history.push(\"/\");\n\n        console.log(\"サインアップしました\");\n      } else {\n        alert('登録ができませんでした');\n      };\n    } catch (err: any) {\n      console.log(err);\n      alert('登録ができませんでした');\n    };\n  };\n  \n\n  return (\n    <>\n      <form>\n        <input \n          name=\"name\"\n          required\n          type=\"text\"\n          value={name}\n          onChange={e => setName(e.target.value)}\n        />\n        <input \n          name=\"email\"\n          required\n          type=\"text\"\n          value={email}\n          onChange={e => setEmail(e.target.value)}\n        />\n        <input \n          name=\"password\"\n          required\n          type=\"text\"\n          value={password}\n          onChange={e => setPassword(e.target.value)}\n        />\n        <input \n          name=\"passwordConfirmation\"\n          required\n          type=\"text\"\n          value={passwordConfirmation}\n          onChange={e => setPasswordConfirmation(e.target.value)}\n        />\n        <button\n          type=\"submit\"\n          disabled={\n              !name || !email || !password || !passwordConfirmation \n              ? true \n              :false\n            }\n          onClick={handleSubmit}\n        >\n          送信\n        </button>\n      </form>\n      <Link to=\"/signin\">\n        アカウント登録済みはこちら\n      </Link>\n    </>\n  )\n}\n\nexport default SignUp"]},"metadata":{},"sourceType":"module"}