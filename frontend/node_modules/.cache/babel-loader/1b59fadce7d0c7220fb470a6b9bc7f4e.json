{"ast":null,"code":"var _jsxFileName = \"/Users/taiki/Desktop/household/frontend/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, createContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext({});\n\nconst App = () => {\n  _s();\n\n  const [loading, setLoading] = useState(true);\n  const [isSignedIn, setIsSignedIn] = useState();\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"vz9eR9rGpQ4YEiK7R9TQOUfvLO4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/taiki/Desktop/household/frontend/src/App.tsx"],"names":["React","useState","createContext","AuthContext","App","loading","setLoading","isSignedIn","setIsSignedIn"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAqCC,aAArC,QAA0D,OAA1D;;AAaA,OAAO,MAAMC,WAAW,gBAAGD,aAAa,CACtC,EADsC,CAAjC;;AAWP,MAAME,GAAa,GAAG,MAAM;AAAA;;AAC1B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAU,IAAV,CAAtC;AACA,QAAM,CAACM,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,EAA5C;AAIA,sBACE;AAAA;AAAA;AAAA;AAAA,UADF;AAID,CAVD;;GAAMG,G;;KAAAA,G;AAYN,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect, createContext } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport axios from 'axios';\n\n// component\nimport Auth from './components/Auth/Auth';\n\n// api\nimport { getCurrentUser } from './api/auth';\n\n// interface\nimport { User } from './interface';\n\nexport const AuthContext = createContext(\n  {} as {\n    loading: boolean,\n    setLoading: React.Dispatch<React.SetStateAction<boolean>>,\n    isSignedIn: boolean,\n    setIsSignedIn: React.Dispatch<React.SetStateAction<boolean>>,\n    currentUser: User | undefined,\n    setCurrentUser: React.Dispatch<React.SetStateAction<User | undefined>>,\n  }\n);\n\nconst App: React.FC = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [isSignedIn, setIsSignedIn] = useState()\n\n\n  \n  return (\n    <div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}