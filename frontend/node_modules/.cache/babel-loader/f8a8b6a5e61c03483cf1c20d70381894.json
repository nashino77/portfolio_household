{"ast":null,"code":"var _jsxFileName = \"/Users/taiki/Desktop/household/frontend/src/components/Calendar/Calendar.tsx\";\nimport React from 'react';\nimport eachDayOfInterval from 'date-fns/eachDayOfInterval';\nimport endOfWeek from 'date-fns/endOfWeek';\nimport eachWeekOfInterval from 'date-fns/eachWeekOfInterval';\nimport startOfMonth from 'date-fns/startOfMonth';\nimport endOfMonth from 'date-fns/endOfMonth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst getCalendarArray = date => {\n  const sundays = eachWeekOfInterval({\n    start: startOfMonth(date),\n    end: endOfMonth(date)\n  });\n  return sundays.map(sunday => eachDayOfInterval({\n    start: sunday,\n    end: endOfWeek(sunday)\n  }));\n};\n\nconst Calendar = () => {\n  const targetDate = new Date();\n  const calendar = getCalendarArray();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Calendar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_c = Calendar;\nexport default Calendar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"sources":["/Users/taiki/Desktop/household/frontend/src/components/Calendar/Calendar.tsx"],"names":["React","eachDayOfInterval","endOfWeek","eachWeekOfInterval","startOfMonth","endOfMonth","getCalendarArray","date","sundays","start","end","map","sunday","Calendar","targetDate","Date","calendar"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAIA,OAAOC,iBAAP,MAA8B,4BAA9B;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,kBAAP,MAA+B,6BAA/B;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;;;;AAEA,MAAMC,gBAAgB,GAAIC,IAAD,IAAgB;AACvC,QAAMC,OAAO,GAAGL,kBAAkB,CAAC;AACjCM,IAAAA,KAAK,EAAEL,YAAY,CAACG,IAAD,CADc;AAEjCG,IAAAA,GAAG,EAAEL,UAAU,CAACE,IAAD;AAFkB,GAAD,CAAlC;AAKA,SAAOC,OAAO,CAACG,GAAR,CAAaC,MAAD,IACjBX,iBAAiB,CAAC;AAAEQ,IAAAA,KAAK,EAAEG,MAAT;AAAiBF,IAAAA,GAAG,EAAER,SAAS,CAACU,MAAD;AAA/B,GAAD,CADZ,CAAP;AAGD,CATD;;AAWA,MAAMC,QAAkB,GAAG,MAAM;AAC/B,QAAMC,UAAU,GAAG,IAAIC,IAAJ,EAAnB;AACA,QAAMC,QAAQ,GAAGV,gBAAgB,EAAjC;AAGA,sBACE;AAAA,2BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAMD,CAXD;;KAAMO,Q;AAaN,eAAeA,QAAf","sourcesContent":["import React from 'react';\nimport format from 'date-fns/format';\nimport getDate from 'date-fns/getDate';\nimport getDay from 'date-fns/getDay';\nimport eachDayOfInterval from 'date-fns/eachDayOfInterval';\nimport endOfWeek from 'date-fns/endOfWeek';\nimport eachWeekOfInterval from 'date-fns/eachWeekOfInterval';\nimport startOfMonth from 'date-fns/startOfMonth';\nimport endOfMonth from 'date-fns/endOfMonth';\n\nconst getCalendarArray = (date: Date) => {\n  const sundays = eachWeekOfInterval({\n    start: startOfMonth(date),\n    end: endOfMonth(date),\n  });\n\n  return sundays.map((sunday) => \n    eachDayOfInterval({ start: sunday, end: endOfWeek(sunday) })\n  );\n};\n\nconst Calendar: React.FC = () => {\n  const targetDate = new Date()\n  const calendar = getCalendarArray();\n\n  \n  return (\n    <>\n      <div>Calendar</div>\n\n    </>\n  )\n}\n\nexport default Calendar"]},"metadata":{},"sourceType":"module"}