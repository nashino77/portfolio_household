{"ast":null,"code":"var _jsxFileName = \"/Users/taiki/Desktop/household/frontend/src/components/Auth/SignIn.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport { useHistory, Link } from 'react-router-dom';\nimport Cookies from 'js-cookie';\nimport { AuthContext } from '../../App'; // api\n\nimport { signIn } from '../../api/auth'; // interface\n\nimport { AUTH } from '../../urls';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SignIn = () => {\n  _s();\n\n  const history = useHistory();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const {\n    setIsSignedIn,\n    setCurrentUser\n  } = useContext(AuthContext);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const params = {\n      email: email,\n      password: password\n    };\n\n    try {\n      const res = await signIn(params);\n      console.log(res);\n\n      if (res.status === 200) {\n        Cookies.set(\"_access_token\", res.headers[\"access-token\"]);\n        Cookies.set(\"_client\", res.headers[\"client\"]);\n        Cookies.set(\"_uid\", res.headers[\"uid\"]);\n        setIsSignedIn(true);\n        setCurrentUser(res.data.data);\n        history.push(\"/\");\n        console.log(\"サインインしました\");\n      } else {\n        alert(\"サインインできませんでした\");\n      }\n    } catch (err) {\n      alert(\"サインインできませんでした\");\n    }\n\n    ;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"email\",\n        required: true,\n        type: \"text\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"password\",\n        required: true,\n        type: \"text\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: !email || !password ? true : false,\n        onChange: handleSubmit,\n        children: \"\\u9001\\u4FE1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/signup\",\n      children: \"\\u672A\\u767B\\u9332\\u306F\\u3053\\u3061\\u3089\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), console.log(`${AUTH}`)]\n  }, void 0, true);\n};\n\n_s(SignIn, \"jJU9QtOA0rpIOhjQdHFo4/v6fz0=\", false, function () {\n  return [useHistory];\n});\n\n_c = SignIn;\nexport default SignIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["/Users/taiki/Desktop/household/frontend/src/components/Auth/SignIn.tsx"],"names":["React","useState","useContext","useHistory","Link","Cookies","AuthContext","signIn","AUTH","SignIn","history","email","setEmail","password","setPassword","setIsSignedIn","setCurrentUser","handleSubmit","e","preventDefault","params","res","console","log","status","set","headers","data","push","alert","err","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,SAASC,UAAT,EAAqBC,IAArB,QAAiC,kBAAjC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,WAAT,QAA4B,WAA5B,C,CAEA;;AACA,SAASC,MAAT,QAAuB,gBAAvB,C,CAEA;;AAGA,SAASC,IAAT,QAAqB,YAArB;;;;AAEA,MAAMC,MAAgB,GAAG,MAAM;AAAA;;AAC7B,QAAMC,OAAO,GAAGP,UAAU,EAA1B;AAEA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAS,EAAT,CAAlC;AACA,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAS,EAAT,CAAxC;AAEA,QAAM;AAAEc,IAAAA,aAAF;AAAiBC,IAAAA;AAAjB,MAAoCd,UAAU,CAACI,WAAD,CAApD;;AAEA,QAAMW,YAAY,GAAG,MAAOC,CAAP,IAAkD;AACrEA,IAAAA,CAAC,CAACC,cAAF;AAEA,UAAMC,MAAoB,GAAG;AAC3BT,MAAAA,KAAK,EAAEA,KADoB;AAE3BE,MAAAA,QAAQ,EAAEA;AAFiB,KAA7B;;AAKA,QAAI;AACF,YAAMQ,GAAG,GAAG,MAAMd,MAAM,CAACa,MAAD,CAAxB;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;;AAEA,UAAIA,GAAG,CAACG,MAAJ,KAAe,GAAnB,EAAwB;AACtBnB,QAAAA,OAAO,CAACoB,GAAR,CAAY,eAAZ,EAA6BJ,GAAG,CAACK,OAAJ,CAAY,cAAZ,CAA7B;AACArB,QAAAA,OAAO,CAACoB,GAAR,CAAY,SAAZ,EAAuBJ,GAAG,CAACK,OAAJ,CAAY,QAAZ,CAAvB;AACArB,QAAAA,OAAO,CAACoB,GAAR,CAAY,MAAZ,EAAoBJ,GAAG,CAACK,OAAJ,CAAY,KAAZ,CAApB;AAEAX,QAAAA,aAAa,CAAC,IAAD,CAAb;AACAC,QAAAA,cAAc,CAACK,GAAG,CAACM,IAAJ,CAASA,IAAV,CAAd;AAEAjB,QAAAA,OAAO,CAACkB,IAAR,CAAa,GAAb;AAEAN,QAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACD,OAXD,MAWO;AACLM,QAAAA,KAAK,CAAC,eAAD,CAAL;AACD;AACF,KAlBD,CAkBE,OAAOC,GAAP,EAAiB;AACjBD,MAAAA,KAAK,CAAC,eAAD,CAAL;AACD;;AAAA;AACF,GA7BD;;AA+BA,sBACE;AAAA,4BACE;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,QAAQ,MAFV;AAGE,QAAA,IAAI,EAAC,MAHP;AAIE,QAAA,KAAK,EAAElB,KAJT;AAKE,QAAA,QAAQ,EAAEO,CAAC,IAAIN,QAAQ,CAACM,CAAC,CAACa,MAAF,CAASC,KAAV;AALzB;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,QAAQ,MAFV;AAGE,QAAA,IAAI,EAAC,MAHP;AAIE,QAAA,KAAK,EAAEnB,QAJT;AAKE,QAAA,QAAQ,EAAEK,CAAC,IAAIJ,WAAW,CAACI,CAAC,CAACa,MAAF,CAASC,KAAV;AAL5B;AAAA;AAAA;AAAA;AAAA,cARF,eAeE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,QAAQ,EACN,CAACrB,KAAD,IAAU,CAACE,QAAX,GACE,IADF,GAEE,KALN;AAOE,QAAA,QAAQ,EAAEI,YAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAfF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eA4BE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,SAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA5BF,EA+BGK,OAAO,CAACC,GAAR,CAAa,GAAEf,IAAK,EAApB,CA/BH;AAAA,kBADF;AAoCD,CA3ED;;GAAMC,M;UACYN,U;;;KADZM,M;AA6EN,eAAeA,MAAf","sourcesContent":["import React, { useState, useContext } from 'react';\nimport { useHistory, Link } from 'react-router-dom';\nimport Cookies from 'js-cookie';\nimport { AuthContext } from '../../App';\n\n// api\nimport { signIn } from '../../api/auth';\n\n// interface\nimport { SignInParams } from '../../interface';\n\nimport { AUTH } from '../../urls';\n\nconst SignIn: React.FC = () => {\n  const history = useHistory();\n\n  const [email, setEmail] = useState<string>(\"\");\n  const [password, setPassword] = useState<string>(\"\");\n\n  const { setIsSignedIn, setCurrentUser } = useContext(AuthContext);\n\n  const handleSubmit = async (e: React.MouseEvent<HTMLButtonElement>) => {\n    e.preventDefault();\n\n    const params: SignInParams = {\n      email: email,\n      password: password,\n    };\n\n    try {\n      const res = await signIn(params);\n      console.log(res);\n\n      if (res.status === 200) {\n        Cookies.set(\"_access_token\", res.headers[\"access-token\"]);\n        Cookies.set(\"_client\", res.headers[\"client\"]);\n        Cookies.set(\"_uid\", res.headers[\"uid\"]);\n\n        setIsSignedIn(true);\n        setCurrentUser(res.data.data);\n\n        history.push(\"/\");\n\n        console.log(\"サインインしました\");\n      } else {\n        alert(\"サインインできませんでした\")\n      }\n    } catch (err: any) {\n      alert(\"サインインできませんでした\")\n    };\n  };\n\n  return (\n    <>\n      <form>\n        <input \n          name=\"email\"\n          required\n          type=\"text\"\n          value={email}\n          onChange={e => setEmail(e.target.value)}\n        />\n        <input \n          name=\"password\"\n          required\n          type=\"text\"\n          value={password}\n          onChange={e => setPassword(e.target.value)}\n        />\n        <button\n          type=\"submit\"\n          disabled={\n            !email || !password\n            ? true\n            : false\n          }\n          onChange={handleSubmit}\n        >\n          送信\n        </button>\n      </form>\n      <Link to=\"/signup\">\n          未登録はこちら\n      </Link>\n      {console.log(`${AUTH}`)}\n\n    </>\n  )\n}\n\nexport default SignIn"]},"metadata":{},"sourceType":"module"}